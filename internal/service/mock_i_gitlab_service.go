// Code generated by mockery v2.12.0. DO NOT EDIT.

package service

import (
	entities "github.com/huyntsgs/graphql-project/internal/service/entities"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// MockIGitlabService is an autogenerated mock type for the IGitlabService type
type MockIGitlabService struct {
	mock.Mock
}

// GetNodeInfo provides a mock function with given fields: n
func (_m *MockIGitlabService) GetNodeInfo(n int) (*entities.NodeSummary, error) {
	ret := _m.Called(n)

	var r0 *entities.NodeSummary
	if rf, ok := ret.Get(0).(func(int) *entities.NodeSummary); ok {
		r0 = rf(n)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entities.NodeSummary)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(n)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockIGitlabService creates a new instance of MockIGitlabService. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockIGitlabService(t testing.TB) *MockIGitlabService {
	mock := &MockIGitlabService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
